package main

import (
	"fmt"
	"sync"
)

// Структура для использования WaitGroup в функциях
type w8Group struct {
	wg *sync.WaitGroup
}

// Горутина проверяет закрылся ли канал пытаясь вычитать из него данные,
// если вернулось стандартное значение (не ок), то завершаем функцию
func (wg *w8Group) okChanel(ch <-chan int) {
	for {
		v, err := <-ch
		if !err {
			fmt.Println("goroutine checking if channel closed finished")
			return
		}
		fmt.Printf(" got: %d\n", v)
	}
}

// range завершится сам, как только канал закроется

// используем отдельный канал для завершения горутины

// используем сигнал из контекста для завершения горутины

// используем сигнал из контекста для завершения горутины
// в данном случае контекст завершается по таймауту, так как выполняется долгая операция

// запись случайных чисел в канал с определенной периодичностью
// завершается по сигналу контекста

func main() {

}

package main

/*
Код ниже написан неверно, так как переменная justString объявляется вне функции
а не внутри неё, что может привести неверной работе функции


var justString string

func someFunc() {
   v := createHugeString(1 << 10)
   justString = v[:100]
}

func main() {
   someFunc()
}
*/

/*
	В данном коде две проблемы, первая заключается в утечке памяти, так как
	глобальная переменная ссылается на срез (который ссылается в свою очередь на массив), то
	сборщик мусора не сможет очистить массив после выхода из функций (на который ссылается v, а потом ссылается justString)
	так как just string все ещё будет ссылаться на этот массив.

	Вторая проблема заключается в том, что если строка состоит из символов unicode,
	justString = v[:100] вернет первые 100 байт, но не 100 символов.
	*Примечание* Еще последний символ может отображаься некорректно если он занимал больше одного байта.
*/

// Пример корректной реализации кода представлен ниже

var justString string

func someFunc() {
	v1 := []rune(createHugeString(1 << 10))
	v2 := make([]rune, 100)

	copy(v2, v1[:100]) // копируем данные в новую область памяти

	justString = string(v2)

}

func createHugeString(length int) string {
	s := make([]rune, length)
	return string(s)
}

func main() {
	someFunc()
}
